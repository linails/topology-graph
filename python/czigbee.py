# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_czigbee', [dirname(__file__)])
        except ImportError:
            import _czigbee
            return _czigbee
        if fp is not None:
            try:
                _mod = imp.load_module('_czigbee', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _czigbee = swig_import_helper()
    del swig_import_helper
else:
    import _czigbee
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def czigbee_main():
  return _czigbee.czigbee_main()
czigbee_main = _czigbee.czigbee_main

def node_cluster_update(*args):
  return _czigbee.node_cluster_update(*args)
node_cluster_update = _czigbee.node_cluster_update

def new_node_cluster():
  return _czigbee.new_node_cluster()
new_node_cluster = _czigbee.new_node_cluster

def free_node_cluster(*args):
  return _czigbee.free_node_cluster(*args)
free_node_cluster = _czigbee.free_node_cluster

def node_cluster_get_node_cnt(*args):
  return _czigbee.node_cluster_get_node_cnt(*args)
node_cluster_get_node_cnt = _czigbee.node_cluster_get_node_cnt

def node_cluster_get_edge_cnt(*args):
  return _czigbee.node_cluster_get_edge_cnt(*args)
node_cluster_get_edge_cnt = _czigbee.node_cluster_get_edge_cnt

def node_cluster_get_node_idx(*args):
  return _czigbee.node_cluster_get_node_idx(*args)
node_cluster_get_node_idx = _czigbee.node_cluster_get_node_idx

def znode_get_nwk(*args):
  return _czigbee.znode_get_nwk(*args)
znode_get_nwk = _czigbee.znode_get_nwk

def znode_get_ntype(*args):
  return _czigbee.znode_get_ntype(*args)
znode_get_ntype = _czigbee.znode_get_ntype

def znode_get_mac_idx(*args):
  return _czigbee.znode_get_mac_idx(*args)
znode_get_mac_idx = _czigbee.znode_get_mac_idx

def znode_get_pos_x(*args):
  return _czigbee.znode_get_pos_x(*args)
znode_get_pos_x = _czigbee.znode_get_pos_x

def znode_get_pos_y(*args):
  return _czigbee.znode_get_pos_y(*args)
znode_get_pos_y = _czigbee.znode_get_pos_y

def znode_get_pos_z(*args):
  return _czigbee.znode_get_pos_z(*args)
znode_get_pos_z = _czigbee.znode_get_pos_z

def node_cluster_get_edge_idx(*args):
  return _czigbee.node_cluster_get_edge_idx(*args)
node_cluster_get_edge_idx = _czigbee.node_cluster_get_edge_idx

def zedge_get_spos_x(*args):
  return _czigbee.zedge_get_spos_x(*args)
zedge_get_spos_x = _czigbee.zedge_get_spos_x

def zedge_get_spos_y(*args):
  return _czigbee.zedge_get_spos_y(*args)
zedge_get_spos_y = _czigbee.zedge_get_spos_y

def zedge_get_spos_z(*args):
  return _czigbee.zedge_get_spos_z(*args)
zedge_get_spos_z = _czigbee.zedge_get_spos_z

def zedge_get_epos_x(*args):
  return _czigbee.zedge_get_epos_x(*args)
zedge_get_epos_x = _czigbee.zedge_get_epos_x

def zedge_get_epos_y(*args):
  return _czigbee.zedge_get_epos_y(*args)
zedge_get_epos_y = _czigbee.zedge_get_epos_y

def zedge_get_epos_z(*args):
  return _czigbee.zedge_get_epos_z(*args)
zedge_get_epos_z = _czigbee.zedge_get_epos_z
# This file is compatible with both classic and new-style classes.


